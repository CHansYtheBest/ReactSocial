{"version":3,"sources":["imgs/Settings.svg","imgs/Copyright.svg","components/Content/Dialogs/dialogs.module.css","components/Layout/Navigation/Navbar/nav.module.css","components/Layout/Navigation/Header/Header.module.css","components/Content/Profile/profile.module.css","reportWebVitals.js","customHooks/fetchFromAPI.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/searchReducer.js","redux/authReducer.js","redux/store.js","components/Layout/Navigation/Header/HeaderLogged.jsx","components/Layout/Navigation/Header/Header.jsx","components/Layout/Navigation/Header/headerContainer.js","components/Layout/Navigation/Navbar/nav.jsx","components/Layout/layout.jsx","components/HOC/withLoginCheckRedirect.js","components/Layout/Navigation/Preloader/preloader.jsx","components/Content/Profile/ProfileInfo/post.jsx","components/Content/Profile/ProfileInfo/profileStatus.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/profile.jsx","components/Content/Profile/profileContainer.js","components/Content/Search/pagination.jsx","components/Content/Search/friendInteractionButton.jsx","components/Content/Search/UserCard.jsx","components/Content/Search/search.jsx","components/Content/Search/searchContainer.js","components/Content/Profile/profileError.jsx","components/Content/Dialogs/Messages/MapMessages/mapMessages.jsx","components/Content/Dialogs/Messages/messages.jsx","components/Content/Dialogs/Messages/messagesContainer.js","components/Content/Dialogs/DialogLink/dialogLink.jsx","components/Content/Dialogs/dialogsList.jsx","components/Content/Dialogs/dialogListContainer.js","components/Login/login.jsx","components/Login/loginContainer.js","components/Content/Settings/settings.jsx","components/Content/Settings/settingsContainer.js","App.js","index.js","components/Content/Dialogs/Messages/messages.module.css","imgs/Search.svg","components/Layout/Navigation/Preloader/preloader.module.css","components/Content/Search/search.module.css","imgs/Dialog.svg","imgs/Bell.svg","imgs/Logo.svg","imgs/Profile.svg","imgs/Feed.svg","imgs/Message.svg","imgs/Friends.svg"],"names":["module","exports","__webpack_require__","p","dialogs","navigation","active","navigation_Separator","navigation_Container","logo","logo_Container","logo_Link","logo_Img","logo_Text","logo_Separator","navigation_List","navigation_Img","copyright","copyright_Separator","copyright_Img","copyright_Text","header","searchbar","searchbar_Input","searchbar_Img","iconLink","profilePreview","profilePreview_container","profilePreview_avatar","content","statusNoEdit","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","instanse","axios","withCredentials","baseURL","headers","API-KEY","useGetProfile","id","get","concat","response","data","initialState","userId","fullName","avatar","small","large","aboutMe","status","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","posts","isFetching","toggleProfileIsFetchingAT","bull","type","value","dialogData","name","messagesData","dialogid","dialog","from","message","newMessageText","users","isNoneUsers","count","currentPage","totalItems","buttonIsFetching","setUsersAT","usersArr","setTotalItemsAT","setCurrentPageAT","toggleIsFetchingAT","fetching","setButtonIsFetchingAT","userID","setIsNoneUsers","getUsersThunk","navigate","onlyFriends","dispatch","Number","page","useGetUsers","totalPages","Math","ceil","totalCount","console","log","items","catch","err","error","removeFriendThunk","delete","resultCode","removeFriendAT","addFriendThunk","post","addFriendAT","email","login","isAuth","loginError","myProfile","hasFetched","setIsAuthActionType","setLoginErrorActionType","toggleMyIsFetchingAT","setStatusAT","setSetHasFetchedProfile","getMyProfileThunk","getState","auth","dataAll","Object","objectSpread","setMyProfileInfoAT","keys","forEach","key","photos","getLoggedInThunk","_data$data","setUserDataActionType","setStatusThunk","put","updateStatus","loginThunk","password","rememberMe","useLogin","messages","reducers","combineReducers","profilePage","state","arguments","length","undefined","action","errorMessage","errorStatus","dialogsPage","dialogIndex","findIndex","i","newMessage","toString","stateCopy","toConsumableArray","searchPage","map","user","followed","filter","newPost","postContent","store","createStore","applyMiddleware","thunkMiddleware","HeaderLogged","memo","props","react_default","a","createElement","Fragment","react_router_dom","to","className","s","src","alt","profilePreview_nameLink","profilePreview_Link","onClick","logout","Header","placeholder","Searchsvg","Dialogsvg","Notificationsvg","Header_HeaderLogged","logoutThunk","HeaderContainer","connect","MapNavlink","isActive","img","text","Nav","Logosvg","nav_MapNavlink","Profilesvg","Feedsvg","Friendsvg","Settingssvg","Copyrightsvg","Layout","headerContainer","nav","react_router","mapStateToProps","mapDispatchToProps","withLoginCheckRedirect","Component","Preloader","preloaderContainer","preloader","AddPost","_useState","useState","_useState2","slicedToArray","postNewText","updatePostNewText","addPost","onKeyPress","event","onChange","target","SortPosts","PostNew","Post","profile","maxPosts","postsData","React","Children","toArray","reverse","Posts","isLoggedProfile","OnElsesProfile","info","OnMyProfile","newInfo","setNewInfo","_useState3","_useState4","editMode","updateEditMode","maxLength","autoFocus","onBlur","setter","EditebleInfo","ProfileInfo","mapLinks","charAt","toUpperCase","slice","href","width","height","setStatus","Profile","useNavigate","useParams","loggedProfileId","ShowProfile","useEffect","isNaN","getMyProfile","getProfile","compose","addPostAT","toggleProfileIsFetching","setProfileInfoAT","getProfileThunk","Pagination","pagesArr","push","currentPageFirst","currentPageLast","slicedPagesArr","onPageButtonClick","pagesButtons","currentLocation","pagination","FriendInteractionButton","friendButton","some","friendButtonFetching","removeFriend","addFriend","disabled","UserCard","userCard","rightSide","toggleButtonIsFetching","leftSide","leftOfLeftSide","about","rightOfLeftSide","Search","location","useLocation","pathname","split","toggleIsFetching","getUsers","paginationContainer","SearchContainer","ownProps","setUsers","setTotalItems","setCurrentPage","ProfileError","MapMessage","messagesArr","fromwho","me","him","Messages","getCurrentMessagesData","onTextChange","addMessage","MessagesContainer","currentId","updateMessageAT","DialogLinks","dialogLinks","names","Dialogs","dialogLink","LoginForm","formik_esm","initialValues","validationSchema","Yup","required","matches","onSubmit","values","setSubmitting","clearLoginError","_ref2","isSubmitting","component","htmlFor","obj","setTimeout","login_LoginForm","SettingsForm","validationObject","getContactsValidation","setNewProfileDataThunk","enableReinitialize","as","AvatarChange","file","updateFile","files","fileForm","FormData","append","setAvatar","Settings","settings_AvatarChange","setAvatarThunk","settings_SettingsForm","jsonObj","updateProfile","updateAvatar","App","isLoaded","path","element","layout_Layout","profileContainer","dialogListContainer","messagesContainer","searchContainer","settingsContainer","loginContainer","d","__webpack_exports__","renderEverything","root","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_redux_es","src_App","preloader1","preloader2","preloader3"],"mappings":"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","file":"static/js/main.7bee90c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Settings.5689f116.svg\";","module.exports = __webpack_public_path__ + \"static/media/Copyright.d173cafa.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__RiuJg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"nav_navigation__10nKZ\",\"active\":\"nav_active__3mV4U\",\"navigation_Separator\":\"nav_navigation_Separator__-dZvY\",\"navigation_Container\":\"nav_navigation_Container__1FhZC\",\"logo\":\"nav_logo__3iafb\",\"logo_Container\":\"nav_logo_Container__-V5Jo\",\"logo_Link\":\"nav_logo_Link__3nO6Q\",\"logo_Img\":\"nav_logo_Img__EVCWN\",\"logo_Text\":\"nav_logo_Text__2AXcp\",\"logo_Separator\":\"nav_logo_Separator__2LMoK\",\"navigation_List\":\"nav_navigation_List__2k2Am\",\"navigation_Img\":\"nav_navigation_Img__8Vtlg\",\"copyright\":\"nav_copyright__35Quy\",\"copyright_Separator\":\"nav_copyright_Separator__axE39\",\"copyright_Img\":\"nav_copyright_Img__16LWm\",\"copyright_Text\":\"nav_copyright_Text__1LAVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1uO6l\",\"searchbar\":\"Header_searchbar__3fS2y\",\"searchbar_Input\":\"Header_searchbar_Input__2FQt1\",\"searchbar_Img\":\"Header_searchbar_Img__1J5mh\",\"navigation\":\"Header_navigation__3ZF8H\",\"iconLink\":\"Header_iconLink__20eXY\",\"profilePreview\":\"Header_profilePreview__20Zqx\",\"profilePreview_container\":\"Header_profilePreview_container__1Jcvl\",\"profilePreview_avatar\":\"Header_profilePreview_avatar__2RPCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"profile_content__3-FFx\",\"statusNoEdit\":\"profile_statusNoEdit__Mg3bh\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\n\nconst instanse = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"2c5b76b2-e1a1-4e88-b0db-fc9b4812f59e\",\n    // \"API-KEY\": \"7cc4b905-033a-4e80-91b2-a5127be51a6a\",\n  },\n});\n\nexport function useCheckIfFriend(id) {\n  return instanse.get(`follow/${id}`).then((response) => {\n    if (response.data.resultCode === 0) {\n      return response;\n    }\n  });\n}\n\nexport function useFriendRemove(id) {\n  return instanse.delete(`follow/${id}`).then((response) => {\n    if (response.data.resultCode === 0) {\n      return id;\n    }\n  });\n}\n\nexport function useFriendAdd(id) {\n  return instanse.post(`follow/${id}`, {}).then((response) => {\n    if (response.data.resultCode === 0) {\n      return id;\n    }\n  });\n}\n\nexport function useGetUsers(count, page, onlyFriends) {\n  return instanse.get(`users?count=${count}&page=${page}&friend=${onlyFriends}`).then((response) => {\n    return response.data;\n  });\n}\n\nexport function useGetProfile(id) {\n  return axios.all([\n    instanse.get(`profile/status/${id}`).then((response) => {\n      return response.data;\n    }),\n    instanse.get(`profile/${id}`).then((response) => {\n      return response.data;\n    }),\n  ]);\n}\n\nexport function updateStatus(status) {\n  return instanse.put(`profile/status`, { status: status }).then((response) => {\n    return response;\n  });\n}\n\nexport function updateProfile(jsonObj) {\n  return instanse.put(`profile`, jsonObj).then((response) => {\n    return response;\n  });\n}\n\nexport function updateAvatar(file) {\n  console.log(file);\n  return instanse.put(`profile/photo`, file).then((response) => {\n    return response;\n  });\n}\n\nexport function useCheckIsLoggedIn() {\n  return instanse.get(`auth/me`).then((response) => {\n    if (response.data.resultCode === 0) {\n      return response.data;\n    } else {\n      return false;\n    }\n  });\n}\n\nexport function useLogin(email, password, rememberMe) {\n  return instanse.post(`auth/login`, { email, password, rememberMe }).then((response) => {\n    return response;\n  });\n}\n\nexport function useLogout() {\n  return instanse.delete(`auth/login`).then((response) => {\n    return response;\n  });\n}\n","import { useGetProfile } from \"../customHooks/fetchFromAPI\";\n\nconst SET_ALL_PROFILE_INFO = \"SET_ALL_PROFILE_INFO\";\nconst SET_USERID = \"SET_USERID\";\nconst SET_ERROR = \"SET_ERROR\";\nconst SET_POSTS = \"SET_POSTS\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst SET_STATUS = \"SET_STATUS\";\n\nlet initialState = {\n  userId: 0,\n  fullName: \"\",\n  avatar: {\n    small: \"\",\n    large: \"\",\n  },\n  aboutMe: \"\",\n  status: \"\",\n  contacts: {\n    facebook: \"facebook.com\",\n    website: \"\",\n    vk: \"vk.com/\",\n    twitter: \"https://twitter.com/\",\n    instagram: \"instagram.com/\",\n    youtube: \"\",\n    github: \"github.com\",\n    mainLink: \"\",\n  },\n  lookingForAJob: true,\n  lookingForAJobDescription: \"Ye, I can do thing. Pls, I need money\",\n  posts: [],\n  isFetching: false,\n};\n\nexport const profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERID: {\n      return { ...state, userId: action.userId };\n    }\n    case SET_ALL_PROFILE_INFO: {\n      return {\n        ...state,\n        fullName: action.data.fullName,\n        avatar: action.data.photos,\n        aboutMe: action.data.aboutMe,\n        lookingForAJob: action.data.lookingForAJob,\n        lookingForAJobDescription: action.data.lookingForAJobDescription,\n        contacts: action.data.contacts,\n      };\n    }\n    case SET_ERROR: {\n      return { ...state, errorMessage: action.error.data.message, errorStatus: action.error.status };\n    }\n    case SET_POSTS: {\n      return { ...state, posts: action.posts };\n    }\n    case SET_STATUS: {\n      return { ...state, status: action.status };\n    }\n    case TOGGLE_IS_FETCHING: {\n      return { ...state, isFetching: action.value };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const setUserIDAT = (userId) => ({ type: SET_USERID, userId: userId });\nexport const setProfileInfoAT = (data) => ({ type: SET_ALL_PROFILE_INFO, data: data });\nexport const setErrorAT = (error) => ({ type: SET_ERROR, error: error });\nexport const setPostsAT = (posts) => ({ type: SET_POSTS, posts: posts });\nexport const toggleProfileIsFetchingAT = (bull) => ({ type: TOGGLE_IS_FETCHING, value: bull });\nexport const setStatusAT = (status) => ({ type: SET_STATUS, status: status });\n\nexport const getProfileThunk = (id) => {\n  return (dispatch) => {\n    dispatch(toggleProfileIsFetchingAT(true));\n    useGetProfile(id)\n      .then((dataAll) => {\n        let data = { ...dataAll[1], status: dataAll[0] };\n        dispatch(setUserIDAT(data.userId));\n        dispatch(\n          setProfileInfoAT(\n            data,\n            Object.keys(data).forEach((key) => {\n              data[key] = data[key] === null ? \"\" : data[key];\n            }),\n            Object.keys(data.photos).forEach((key) => {\n              data.photos[key] = data.photos[key] === null ? \"https://cdn-icons-png.flaticon.com/512/21/21104.png\" : data.photos[key];\n            }),\n            Object.keys(data.contacts).forEach((key) => {\n              data.contacts[key] = data.contacts[key] === null ? \"\" : data.contacts[key];\n            })\n          )\n        );\n        dispatch(setStatusAT(data.status === null ? \"\" : data.status));\n        dispatch(setPostsAT([]));\n\n        dispatch(toggleProfileIsFetchingAT(false));\n      })\n      .catch((err) => {\n        console.error(err);\n        dispatch(toggleProfileIsFetchingAT(false));\n      });\n  };\n};\n","const ADD_MESSAGE = \"ADD_MESSAGE\";\nconst UPDATE_MESSAGE_NEW_TEXT = \"UPDATE_MESSAGE_NEW_TEXT\";\n\nlet initialState = {\n  dialogData: [\n    { id: 0, name: \"Yoo Yu\" },\n    { id: 1, name: \"Karen McChicken\" },\n    { id: 2, name: \"Crazy Dave\" },\n    { id: 3, name: \"Pop Bob\" },\n    { id: 4, name: \"Poop Boob\" },\n  ],\n  messagesData: [\n    {\n      dialogid: 0,\n      dialog: [\n        { id: 0, from: \"me\", message: \"Yoo, my guy. How's life?\" },\n        { id: 1, from: \"him\", message: \"Peepo, hello. My life has been cool.\" },\n        { id: 2, from: \"me\", message: \"I'm glad to hear that, my dear friend.\" },\n        { id: 3, from: \"me\", message: \"Would you like to hang out?\" },\n        { id: 4, from: \"him\", message: \"Yes, indeed I would.\" },\n      ],\n      newMessageText: \"\",\n    },\n    {\n      dialogid: 1,\n      dialog: [\n        { id: 0, from: \"me\", message: \"Ms. Karen, I would like to submit my school project.\" },\n        { id: 1, from: \"him\", message: \"no\" },\n        { id: 2, from: \"me\", message: \"Why?\" },\n      ],\n      newMessageText: \"\",\n    },\n    {\n      dialogid: 2,\n      dialog: [\n        { id: 0, from: \"him\", message: \"I am in your walls Peepo.\" },\n        { id: 1, from: \"him\", message: \"Peepo, you can't hide.\" },\n        { id: 2, from: \"him\", message: \"You can't escape Peepo.\" },\n        { id: 3, from: \"him\", message: \"I think about you when I go to sleep\" },\n        { id: 4, from: \"me\", message: \"Dave, please stop.\" },\n      ],\n      newMessageText: \"\",\n    },\n    {\n      dialogid: 3,\n      dialog: [\n        { id: 0, from: \"me\", message: \"Hey, Bob. I hate you.\" },\n        { id: 1, from: \"him\", message: \":(\" },\n        { id: 2, from: \"me\", message: \"Sorry, I was joking.\" },\n      ],\n      newMessageText: \"\",\n    },\n    {\n      dialogid: 4,\n      dialog: [\n        { id: 0, from: \"me\", message: \"Hey, Boob. I love you.\" },\n        { id: 1, from: \"him\", message: \":)\" },\n        { id: 2, from: \"him\", message: \"Thanks.\" },\n      ],\n      newMessageText: \"\",\n    },\n  ],\n};\n\nexport const dialogsReducer = (state = initialState, action) => {\n  let dialogIndex = state.messagesData.findIndex((i) => i.dialogid === Number(action.id));\n\n  switch (action.type) {\n    case ADD_MESSAGE: {\n      console.log(state, action);\n      let newMessage = {\n        id: state.messagesData[dialogIndex].dialog.length.toString(),\n        from: \"me\",\n        message: state.messagesData[dialogIndex].newMessageText,\n      };\n\n      let stateCopy = {\n        ...state,\n        messagesData: [...state.messagesData],\n      };\n      stateCopy.messagesData[dialogIndex] = {\n        dialogid: dialogIndex,\n        newMessageText: \"\",\n        dialog: [...state.messagesData[dialogIndex].dialog, newMessage],\n      };\n      return stateCopy;\n    }\n    case UPDATE_MESSAGE_NEW_TEXT: {\n      let stateCopy = { ...state };\n      stateCopy.messagesData[dialogIndex] = {\n        ...state.messagesData[dialogIndex],\n        newMessageText: action.content,\n      };\n      return stateCopy;\n    }\n    default: {\n      return state;\n    }\n  }\n};\nexport const addMessageAT = (currentId) => ({ type: ADD_MESSAGE, id: currentId });\nexport const updateMessageAT = (message, currentId) => ({ type: UPDATE_MESSAGE_NEW_TEXT, content: message, id: currentId });\n","import { useFriendAdd, useFriendRemove, useGetUsers } from \"../customHooks/fetchFromAPI\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_TOTAL_ITEMS = \"SET_TOTAL_ITEMS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst TOGGLE_SEARCH_IS_FETCHING = \"TOGGLE_SEARCH_IS_FETCHING\";\nconst SET_BUTTON_IS_FETCHING = \"SET_BUTTON_IS_FETCHING\";\nconst SET_IS_NONE_USERS = \"SET_IS_NONE_USERS\";\n\nlet initialState = {\n  users: [],\n  isNoneUsers: null,\n  count: 8,\n  currentPage: 1,\n  totalItems: 1,\n  isFetching: false,\n  buttonIsFetching: [],\n};\nexport const searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW: {\n      return {\n        ...state,\n        users: state.users.map((user) => {\n          if (user.id === action.userID) {\n            return { ...user, followed: true };\n          }\n          return user;\n        }),\n      };\n    }\n    case UNFOLLOW: {\n      return {\n        ...state,\n        users: state.users.map((user) => {\n          if (user.id === action.userID) {\n            return { ...user, followed: false };\n          }\n          return user;\n        }),\n      };\n    }\n    case SET_USERS: {\n      return { ...state, users: action.users };\n    }\n    case SET_TOTAL_ITEMS: {\n      return { ...state, totalItems: action.totalItems };\n    }\n    case SET_CURRENT_PAGE: {\n      return { ...state, currentPage: action.currentPage };\n    }\n    case TOGGLE_SEARCH_IS_FETCHING: {\n      return { ...state, isFetching: action.fetching };\n    }\n    case SET_BUTTON_IS_FETCHING: {\n      return {\n        ...state,\n        buttonIsFetching: action.fetching ? [...state.buttonIsFetching, action.userID] : state.buttonIsFetching.filter((id) => id !== action.userID),\n      };\n    }\n    case SET_IS_NONE_USERS: {\n      return {\n        ...state,\n        isNoneUsers: action.bull,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const addFriendAT = (userID) => ({ type: FOLLOW, userID: userID });\nexport const removeFriendAT = (userID) => ({ type: UNFOLLOW, userID: userID });\nexport const setUsersAT = (usersArr) => ({ type: SET_USERS, users: usersArr });\nexport const setTotalItemsAT = (totalItems) => ({ type: SET_TOTAL_ITEMS, totalItems: totalItems });\nexport const setCurrentPageAT = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage });\nexport const toggleIsFetchingAT = (bull) => ({ type: TOGGLE_SEARCH_IS_FETCHING, fetching: bull });\nexport const setButtonIsFetchingAT = (bull, userID) => ({ type: SET_BUTTON_IS_FETCHING, fetching: bull, userID: userID });\nexport const setIsNoneUsers = (bull) => ({ type: SET_IS_NONE_USERS, bull: bull });\n\nexport const getUsersThunk = (navigate, id, currentPage, count, onlyFriends) => {\n  return (dispatch) => {\n    dispatch(toggleIsFetchingAT(true));\n    //Check for valid id\n    if (currentPage !== id) {\n      dispatch(setCurrentPageAT(Number(id)));\n    }\n    //Fetch users\n    useGetUsers(count, id, onlyFriends)\n      .then((data) => {\n        let totalPages = Math.ceil(data.totalCount / count);\n        console.log(data);\n        if (totalPages === 0) {\n          dispatch(setIsNoneUsers(true));\n          dispatch(toggleIsFetchingAT(false));\n        } else {\n          dispatch(setIsNoneUsers(false));\n          dispatch(setUsersAT(data.items));\n          dispatch(setTotalItemsAT(data.totalCount));\n          dispatch(toggleIsFetchingAT(false));\n          console.log(id, totalPages);\n          //Check if id bigger than totalPages\n\n          if (id > totalPages) {\n            navigate(\"/search/1\");\n          }\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        navigate(\"/search/1\");\n      });\n  };\n};\n\nexport const removeFriendThunk = (userID) => {\n  return (dispatch) => {\n    dispatch(setButtonIsFetchingAT(true, userID));\n    useFriendRemove(userID).then((id) => {\n      dispatch(removeFriendAT(id));\n      dispatch(setButtonIsFetchingAT(false, userID));\n    });\n  };\n};\n\nexport const addFriendThunk = (userID) => {\n  return (dispatch) => {\n    dispatch(setButtonIsFetchingAT(true, userID));\n    useFriendAdd(userID).then((id) => {\n      dispatch(addFriendAT(id));\n      dispatch(setButtonIsFetchingAT(false, userID));\n    });\n  };\n};\n","import { useCheckIsLoggedIn, useLogin, useLogout, updateAvatar, updateProfile, updateStatus, useGetProfile } from \"../customHooks/fetchFromAPI\";\n\nconst SET_USER_DATA = \"SET_USER_DATA\";\nconst SET_IS_AUTH = \"SET_IS_AUTH\";\nconst SET_LOGIN_ERROR = \"SET_LOGIN_ERROR\";\nconst ADD_POST = \"ADD-POST\";\nconst SET_ALL_MY_PROFILE_INFO = \"SET_ALL_MY_PROFILE_INFO\";\nconst SET_ERROR = \"SET_ERROR\";\nconst SET_MY_POSTS = \"SET_MY_POSTS\";\nconst TOGGLE_MY_IS_FETCHING = \"TOGGLE_MY_IS_FETCHING\";\nconst SET_MY_STATUS = \"SET_MY_STATUS\";\nconst SET_AVATAR = \"SET_AVATAR\";\nconst HAS_FETCHED_PROFILE = \"HAS_FETCHED_PROFILE\";\n\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: null,\n  loginError: null,\n  myProfile: {\n    fullName: \"\",\n    avatar: {\n      small: \"\",\n      large: \"\",\n    },\n    aboutMe: \"\",\n    status: \"\",\n    contacts: {\n      facebook: \"facebook.com\",\n      website: \"\",\n      vk: \"vk.com/\",\n      twitter: \"https://twitter.com/\",\n      instagram: \"instagram.com/\",\n      youtube: \"\",\n      github: \"github.com\",\n      mainLink: \"\",\n    },\n    lookingForAJob: true,\n    lookingForAJobDescription: \"Ye, I can do thing. Pls, I need money\",\n    posts: [],\n  },\n  hasFetched: false,\n  isFetching: false,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA: {\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true,\n      };\n    }\n    case SET_IS_AUTH: {\n      return {\n        ...state,\n        isAuth: action.isAuth,\n      };\n    }\n    case HAS_FETCHED_PROFILE: {\n      return {\n        ...state,\n        hasFetched: action.bull,\n      };\n    }\n    case SET_LOGIN_ERROR: {\n      return {\n        ...state,\n        loginError: action.loginError,\n      };\n    }\n    case ADD_POST: {\n      let newPost = {\n        id: state.posts.length,\n        postContent: action.post,\n      };\n\n      return {\n        ...state,\n        myProfile: { ...state.myProfile, posts: [...state.posts, newPost] },\n      };\n    }\n    case SET_ALL_MY_PROFILE_INFO: {\n      return {\n        ...state,\n        myProfile: {\n          ...state.myProfile,\n          fullName: action.data.fullName,\n          avatar: action.data.photos,\n          aboutMe: action.data.aboutMe,\n          lookingForAJob: action.data.lookingForAJob,\n          lookingForAJobDescription: action.data.lookingForAJobDescription,\n          contacts: action.data.contacts,\n        },\n      };\n    }\n    case SET_ERROR: {\n      return { ...state, errorMessage: action.error.data.message, errorStatus: action.error.status };\n    }\n    case SET_MY_POSTS: {\n      return { ...state, myProfile: { ...state.myProfile, posts: action.posts } };\n    }\n    case SET_MY_STATUS: {\n      return { ...state, myProfile: { ...state.myProfile, status: action.status } };\n    }\n    case SET_AVATAR: {\n      return { ...state, avatar: action.avatar };\n    }\n    case TOGGLE_MY_IS_FETCHING: {\n      return { ...state, isFetching: action.value };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const setUserDataActionType = (id, email, login) => ({ type: SET_USER_DATA, data: { id, email, login } });\nexport const setIsAuthActionType = (bull) => ({ type: SET_IS_AUTH, isAuth: bull });\nexport const setLoginErrorActionType = (loginError) => ({ type: SET_LOGIN_ERROR, loginError: loginError });\nexport const setMyAvatarAT = (avatar) => ({ type: SET_AVATAR, avatar: avatar });\nexport const setMyProfileInfoAT = (data) => ({ type: SET_ALL_MY_PROFILE_INFO, data: data });\nexport const setErrorAT = (error) => ({ type: SET_ERROR, error: error });\nexport const setPostsAT = (posts) => ({ type: SET_MY_POSTS, posts: posts });\nexport const addPostAT = (post) => ({ type: ADD_POST, post: post });\nexport const toggleMyIsFetchingAT = (bull) => ({ type: TOGGLE_MY_IS_FETCHING, value: bull });\nexport const setStatusAT = (status) => ({ type: SET_MY_STATUS, status: status });\nexport const setSetHasFetchedProfile = (bull) => ({ type: HAS_FETCHED_PROFILE, bull: bull });\n\nexport const getMyProfileThunk = () => {\n  return (dispatch, getState) => {\n    let id = getState().auth.id;\n    dispatch(toggleMyIsFetchingAT(true));\n    useGetProfile(id)\n      .then((dataAll) => {\n        let data = { ...dataAll[1], status: dataAll[0] };\n        dispatch(\n          setMyProfileInfoAT(\n            data,\n            Object.keys(data).forEach((key) => {\n              data[key] = data[key] === null ? \"\" : data[key];\n            }),\n            Object.keys(data.photos).forEach((key) => {\n              data.photos[key] = data.photos[key] === null ? \"https://cdn-icons-png.flaticon.com/512/21/21104.png\" : data.photos[key];\n            }),\n            Object.keys(data.contacts).forEach((key) => {\n              data.contacts[key] = data.contacts[key] === null ? \"\" : data.contacts[key];\n            })\n          )\n        );\n        dispatch(setStatusAT(data.status === null ? \"\" : data.status));\n        dispatch(setPostsAT([]));\n\n        dispatch(toggleMyIsFetchingAT(false));\n        dispatch(setSetHasFetchedProfile(true));\n      })\n      .catch((err) => {\n        console.error(err);\n        dispatch(toggleMyIsFetchingAT(false));\n        dispatch(setSetHasFetchedProfile(true));\n      });\n  };\n};\n\nexport const getLoggedInThunk = () => {\n  return (dispatch) => {\n    useCheckIsLoggedIn().then((data) => {\n      if (data !== false) {\n        let { id, email, login } = data.data;\n        dispatch(setUserDataActionType(id, email, login));\n        dispatch(setIsAuthActionType(true));\n      } else {\n        dispatch(setIsAuthActionType(false));\n      }\n    });\n  };\n};\n\nexport const setNewProfileDataThunk = (jsonObj) => {\n  return (dispatch) => {\n    dispatch(toggleMyIsFetchingAT(true));\n    updateProfile(jsonObj)\n      .then((data) => {\n        dispatch(getMyProfileThunk());\n        dispatch(toggleMyIsFetchingAT(false));\n      })\n      .catch((err) => {\n        console.error(err);\n        dispatch(toggleMyIsFetchingAT(false));\n      });\n  };\n};\n\nexport const setStatusThunk = (status) => {\n  return (dispatch) => {\n    dispatch(toggleMyIsFetchingAT(true));\n    updateStatus(status).then((data) => {\n      dispatch(setStatusAT(status));\n      dispatch(toggleMyIsFetchingAT(false));\n    });\n  };\n};\n\nexport const setAvatarThunk = (file) => {\n  return (dispatch, getState) => {\n    dispatch(toggleMyIsFetchingAT(true));\n    updateAvatar(file).then((data) => {\n      dispatch(getMyProfileThunk(getState().auth.id));\n      dispatch(toggleMyIsFetchingAT(false));\n    });\n  };\n};\n\nexport const loginThunk = (email, password, rememberMe) => {\n  return (dispatch) => {\n    useLogin(email, password, rememberMe).then((response) => {\n      if (response.data.resultCode === 0) {\n        dispatch(getLoggedInThunk());\n      } else {\n        dispatch(setLoginErrorActionType(response.data.messages[0]));\n      }\n    });\n  };\n};\n\nexport const logoutThunk = () => {\n  return (dispatch) => {\n    useLogout().then((response) => {\n      dispatch(getLoggedInThunk());\n    });\n  };\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { profileReducer } from \"./profileReducer\";\nimport { dialogsReducer } from \"./dialogsReducer\";\nimport { searchReducer } from \"./searchReducer\";\nimport { authReducer } from \"./authReducer\";\nimport thunkMiddleware from \"redux-thunk\";\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  searchPage: searchReducer,\n  auth: authReducer,\n});\n\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n","import React, { memo } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport s from \"./Header.module.css\";\n\nlet HeaderLogged = memo((props) => {\n  if (props.isAuth === true) {\n    return (\n      <>\n        <Link to={`/profile/${props.id}`}>\n          <img className={s.profilePreview_avatar} src={props.avatar} alt=\"avatar\" />\n        </Link>\n        <div className={s.profilePreview_container}>\n          <Link className={s.profilePreview_nameLink} to={`/profile/${props.id}`}>\n            {props.login}\n          </Link>\n          <Link className={s.profilePreview_Link} to={`/profile/${props.id}`}>\n            View\n          </Link>\n        </div>\n        <button className={s.profilePreview_Link} onClick={props.logout}>\n          Logout\n        </button>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <NavLink to=\"/login\">LOGIN</NavLink>\n      </>\n    );\n  }\n});\nexport default HeaderLogged;\n","import React, { memo } from \"react\";\nimport s from \"./Header.module.css\";\nimport Searchsvg from \"../../../../imgs/Search.svg\";\nimport { Link } from \"react-router-dom\";\nimport Dialogsvg from \"../../../../imgs/Dialog.svg\";\nimport Notificationsvg from \"../../../../imgs/Bell.svg\";\nimport HeaderLogged from \"./HeaderLogged\";\n\nconst Header = memo((props) => {\n  return (\n    <header className={s.header}>\n      <div className={s.searchbar}>\n        <input className={s.searchbar_Input} type=\"text\" placeholder=\"Search...\" /> <img className={s.searchbar_Img} src={Searchsvg} alt=\"\" />\n      </div>\n      <div className={s.navigation}>\n        <Link className={s.iconLink} to=\"/dialog\">\n          <img src={Dialogsvg} alt=\"\" />\n        </Link>\n        <Link className={s.iconLink} to=\"/notification\">\n          <img src={Notificationsvg} alt=\"\" />\n        </Link>\n        <div className={s.profilePreview}>\n          <HeaderLogged isAuth={props.auth.isAuth} avatar={props.avatar} id={props.auth.id} login={props.auth.login} logout={props.logoutThunk} />\n        </div>\n      </div>\n    </header>\n  );\n});\n\nexport default Header;\n","import { connect } from \"react-redux\";\nimport { logoutThunk } from \"../../../../redux/authReducer\";\nimport Header from \"./Header\";\n\nlet mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    avatar: state.auth.myProfile.avatar.small,\n  };\n};\n\nconst HeaderContainer = connect(mapStateToProps, { logoutThunk })(Header);\n\nexport default HeaderContainer;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport s from \"./nav.module.css\";\nimport Logosvg from \"../../../../imgs/Logo.svg\";\nimport Profilesvg from \"../../../../imgs/Profile.svg\";\nimport Feedsvg from \"../../../../imgs/Feed.svg\";\nimport Dialogsvg from \"../../../../imgs/Message.svg\";\nimport Friendsvg from \"../../../../imgs/Friends.svg\";\nimport Settingssvg from \"../../../../imgs/Settings.svg\";\nimport Copyrightsvg from \"../../../../imgs/Copyright.svg\";\nimport Searchsvg from \"../../../../imgs/Search.svg\";\n\nconst MapNavlink = (props) => {\n  return (\n    <li>\n      <NavLink to={props.to} className={({ isActive }) => (isActive ? s.active : \"\")}>\n        <img className={s.navigation_Img} src={props.img} alt=\"\" />\n        <p>{props.text}</p>\n      </NavLink>\n    </li>\n  );\n};\n\nconst Nav = () => {\n  return (\n    <nav className={s.navigation}>\n      <div className={s.navigation_Container}>\n        <section className={s.logo}>\n          <div className={s.logo_Container}>\n            <Link className={s.logo_Link} to=\"/\">\n              <img className={s.logo_Img} src={Logosvg} alt=\"logo\" />\n              <p className={s.logo_Text}>ReactSocial</p>\n            </Link>\n            <div className={s.logo_Separator}></div>\n          </div>\n        </section>\n        <ul className={s.navigation_List}>\n          <MapNavlink to=\"/profile\" text=\"My Page\" img={Profilesvg} />\n          <MapNavlink to=\"/feed\" text=\"News Feed\" img={Feedsvg} />\n          <MapNavlink to=\"/dialog\" text=\"Messages\" img={Dialogsvg} />\n          <MapNavlink to=\"/friends/1\" text=\"Friends\" img={Friendsvg} />\n        </ul>\n        <div className={s.navigation_Separator}></div>\n        <ul className={s.navigation_List}>\n          <MapNavlink to=\"/search/1\" text=\"Find People\" img={Searchsvg} />\n          <MapNavlink to=\"/settings\" text=\"Settings\" img={Settingssvg} />\n        </ul>\n        <section className={s.copyright}>\n          <div className={s.copyright_Separator}> </div>\n          <div className={s.copyright_Text}>\n            <img className={s.copyright_Img} src={Copyrightsvg} alt=\"\" />\n            <p>2022 All rights are reserved.</p>\n          </div>\n          <p>Dybovsky & Chibotaru LLC</p>\n        </section>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport HeaderContainer from \"./Navigation/Header/headerContainer\";\nimport Nav from \"./Navigation/Navbar/nav\";\n\nexport const Layout = (props) => {\n  return (\n    <div className=\"wrapper\">\n      <HeaderContainer />\n      <Nav />\n      <div className=\"content\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nlet mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default function withLoginCheckRedirect(Component) {\n  let LoginCheck = (props) => {\n    if (props.isAuth === null) {\n      return null;\n    } else if (!props.isAuth) {\n      return <Navigate to=\"/login\" />;\n    }\n    return <Component {...props} />;\n  };\n  return connect(mapStateToProps, mapDispatchToProps)(LoginCheck);\n}\n","import React from \"react\";\nimport s from \"./preloader.module.css\";\n\nexport default function Preloader(props) {\n  return (\n    <>\n      <div className={s.preloaderContainer}>\n        <div className={s.preloader}>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\n\nfunction AddPost(props) {\n  let [postNewText, updatePostNewText] = useState(\"\");\n  let onPostChange = (e) => {\n    updatePostNewText(e.target.value);\n  };\n  let addPost = () => {\n    props.addPost(postNewText);\n    updatePostNewText(\"\");\n  };\n  function onEnterPress(event) {\n    if (event.key === \"Enter\") {\n      addPost(postNewText);\n    }\n  }\n\n  return (\n    <div>\n      <input onKeyPress={onEnterPress} placeholder=\"Enter a new post...\" value={postNewText} onChange={onPostChange}></input>\n      <button onClick={addPost}>Add post</button>\n    </div>\n  );\n}\n\nfunction SortPosts(props) {\n  function PostNew(props) {\n    return (\n      <div>\n        <p>New post from {props.name}:</p> <div>{props.content}</div>\n      </div>\n    );\n  }\n\n  function Post(props) {\n    return (\n      <div>\n        <p>{props.name} posted:</p> <div>{props.content}</div>\n      </div>\n    );\n  }\n\n  if (props.profile.posts.length !== 0) {\n    let maxPosts = props.profile.posts.length - 1;\n\n    let postsData = React.Children.toArray(\n      props.profile.posts.map((post) => {\n        if (post.id === maxPosts) {\n          return <PostNew name={props.profile.fullName} content={post.postContent} />;\n        } else return <Post name={props.profile.fullName} content={post.postContent} />;\n      })\n    );\n\n    return <>{postsData.reverse()}</>;\n  } else {\n    return <p>Sadly, {props.profile.fullName} didn't write any posts!</p>;\n  }\n}\n\nexport function Posts(props) {\n  return (\n    <>\n      {props.isLoggedProfile ? <AddPost postNewText={props.profile.postNewText} addPost={props.addPost} /> : \"\"}\n      <SortPosts profile={props.profile} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport s from \"../profile.module.css\";\n\nfunction OnElsesProfile(props) {\n  return <p>{props.info === null ? \"\" : props.info}</p>;\n}\n\nfunction OnMyProfile(props) {\n  let [newInfo, setNewInfo] = useState(\"\");\n  let [editMode, updateEditMode] = useState(false);\n\n  let startEditMode = () => {\n    setNewInfo(props.info === null ? \"\" : props.info);\n    updateEditMode(true);\n  };\n  let finishEditMode = () => {\n    props.setter(newInfo);\n    updateEditMode(false);\n  };\n  let onNewStatusChange = (e) => {\n    setNewInfo(e.target.value);\n  };\n\n  return (\n    <>\n      {editMode ? (\n        <input maxLength={230} autoFocus onBlur={finishEditMode} placeholder=\"Enter...\" value={newInfo} onChange={onNewStatusChange}></input>\n      ) : (\n        <p className={s.statusNoEdit} onClick={startEditMode}>\n          {props.info === null || props.info === \"\" ? \"|\" : props.info}\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default function EditebleInfo(props) {\n  return (\n    <>\n      {props.isLoggedProfile ? (\n        <OnMyProfile info={props.info} setter={props.setter}></OnMyProfile>\n      ) : (\n        <OnElsesProfile info={props.info}></OnElsesProfile>\n      )}\n    </>\n  );\n}\n","import React, { memo } from \"react\";\nimport s from \"./../profile.module.css\";\nimport { Posts } from \"./post\";\nimport EditebleInfo from \"./profileStatus\";\n\nexport let ProfileInfo = memo((props) => {\n  let mapLinks = React.Children.toArray(\n    Object.keys(props.profile.contacts).map((key) => {\n      return (\n        <p>\n          {key.charAt(0).toUpperCase() + key.slice(1) + \":\"}\n          <a href={`${props.profile.contacts[key]}`}> {props.profile.contacts[key]}</a>\n        </p>\n      );\n    })\n  );\n  return (\n    <div>\n      <div className={s.profile}>\n        <div>\n          <img src={props.profile.avatar.large} alt=\"avatar\" width=\"300px\" height=\"300px\" />\n        </div>\n        <div>\n          <p>{props.profile.fullName}</p>\n          <br />\n        </div>\n        <div>\n          <EditebleInfo isLoggedProfile={props.isLoggedProfile} setter={props.setStatus} info={props.profile.status} />\n        </div>\n        <div>\n          <br />\n          <p>About me:</p> <p>{props.profile.aboutMe ? props.profile.aboutMe : \"null\"}</p>\n        </div>\n        <div>\n          <br />\n          <p>Looking for a job:</p> <p>{props.profile.lookingForAJob ? \"Yes\" : \"No\"}</p>\n        </div>\n        <div>\n          <p>{props.profile.lookingForAJobDescription ? props.profile.lookingForAJobDescription : \"null\"}</p>\n        </div>\n        <div>\n          <br />\n          <p>Contacts:</p>\n          {mapLinks}\n        </div>\n      </div>\n\n      <div id=\"posts\">\n        <Posts isLoggedProfile={props.isLoggedProfile} profile={props.profile} addPost={props.addPost} />\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\nimport { useEffect } from \"react\";\nimport { NavLink, useNavigate, useParams } from \"react-router-dom\";\nimport s from \"./profile.module.css\";\nimport Preloader from \"../../Layout/Navigation/Preloader/preloader\";\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\n\nlet Profile = memo((props) => {\n  let navigate = useNavigate();\n  const id = Number(useParams().id);\n  let isLoggedProfile = id === props.loggedProfileId;\n\n  useEffect(() => {\n    if (!isNaN(id)) {\n      if (isLoggedProfile) {\n        props.getMyProfile();\n      } else {\n        props.getProfile(id);\n      }\n    } else if (props.auth.isAuth === true) {\n      navigate(`/profile/${props.loggedProfileId}`);\n    } else {\n      navigate(\"/profile/error\");\n    }\n  }, [id]);\n\n  function ShowProfile() {\n    return isLoggedProfile ? (\n      <>\n        <NavLink to=\"/settings\">Settings</NavLink>\n        <ProfileInfo isLoggedProfile={isLoggedProfile} profile={props.auth.myProfile} addPost={props.addPost} setStatus={props.setStatus} />\n      </>\n    ) : (\n      <ProfileInfo isLoggedProfile={isLoggedProfile} profile={props.profilePage} />\n    );\n  }\n\n  return <section className={s.content}>{props.profilePage.isFetching || props.auth.isFetching ? <Preloader /> : <ShowProfile />}</section>;\n});\n\nexport default Profile;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { getProfileThunk, toggleProfileIsFetchingAT } from \"../../../redux/profileReducer\";\nimport { addPostAT, getMyProfileThunk, setStatusThunk, toggleMyIsFetchingAT } from \"../../../redux/authReducer\";\nimport withLoginCheckRedirect from \"../../HOC/withLoginCheckRedirect\";\nimport Profile from \"./profile\";\n\nlet mapStateToProps = (state) => {\n  return {\n    profilePage: state.profilePage,\n    auth: state.auth,\n    loggedProfileId: state.auth.id,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (post) => {\n      dispatch(addPostAT(post));\n    },\n    toggleProfileIsFetching: (bull) => {\n      dispatch(toggleProfileIsFetchingAT(bull));\n    },\n    toggleMyIsFetchingAT: (bull) => {\n      dispatch(toggleMyIsFetchingAT(bull));\n    },\n    getMyProfile: () => {\n      dispatch(getMyProfileThunk());\n    },\n    getProfile: (id) => {\n      dispatch(getProfileThunk(id));\n    },\n    setStatus: (status) => {\n      dispatch(setStatusThunk(status));\n    },\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withLoginCheckRedirect)(Profile);\n","import React from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport s from \"./search.module.css\";\n\nfunction Pagination(props) {\n  let navigate = useNavigate();\n  let pagesArr = [];\n  for (let i = 0; i <= props.totalPages; i++) {\n    pagesArr.push(i);\n  }\n\n  let currentPageFirst = props.currentPage - 4;\n  let currentPageLast = props.currentPage + 5;\n  if (props.currentPage - 4 <= 0) {\n    currentPageFirst = 1;\n    currentPageLast = props.currentPage + 10 - props.currentPage;\n  } else if (props.currentPage + 5 > props.totalPages) {\n    currentPageLast = props.totalPages + 1;\n    currentPageFirst = props.totalPages - 8;\n  }\n  let slicedPagesArr = pagesArr.slice(currentPageFirst, currentPageLast);\n\n  let onPageButtonClick = (page) => {\n    navigate(page);\n  };\n\n  let pagesButtons = React.Children.toArray(\n    slicedPagesArr.map((page) => {\n      return (\n        <NavLink\n          to={`/${props.currentLocation}/` + page}\n          onClick={() => onPageButtonClick(page)}\n          className={() => {\n            return s.pagination + \" \" + (props.currentPage === page ? s.active : \"\");\n          }}\n        >\n          {page}\n        </NavLink>\n      );\n    })\n  );\n\n  return (\n    <>\n      <NavLink to={`/${props.currentLocation}/` + 1} onClick={() => onPageButtonClick(1)} className={s.pagination}>\n        {\"|<\"}\n      </NavLink>\n      {pagesButtons}\n      <NavLink to={`/${props.currentLocation}/` + props.totalPages} onClick={() => onPageButtonClick(props.totalPages)} className={s.pagination}>\n        {\">|\"}\n      </NavLink>\n    </>\n  );\n}\nexport default Pagination;\n","import React from \"react\";\nimport s from \"./search.module.css\";\n\nexport function FriendInteractionButton(props) {\n  let onFriendInteractionClick = (followed, userId) => {\n    if (followed === true) {\n      props.removeFriend(userId);\n    } else {\n      props.addFriend(userId);\n    }\n  };\n\n  return (\n    <>\n      <button\n        className={`${s.friendButton} ${props.buttonIsFetching.some((id) => id === props.id) ? s.friendButtonFetching : \"\"}`}\n        onClick={() => onFriendInteractionClick(props.followed, props.id)}\n        disabled={props.buttonIsFetching.some((id) => id === props.id)}\n      >\n        {props.followed ? \"Remove friend\" : \"Add friend\"}\n      </button>\n    </>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FriendInteractionButton } from \"./friendInteractionButton\";\nimport s from \"./search.module.css\";\n\nexport function UserCard(props) {\n  return (\n    <div className={s.userCard}>\n      <div className={s.rightSide}>\n        <NavLink to={`/profile/${props.user.id}`}>\n          <img src={props.user.photos.small !== null ? props.user.photos.small : \"https://cdn-icons-png.flaticon.com/512/21/21104.png\"} alt=\"\" />\n        </NavLink>\n        <FriendInteractionButton\n          id={props.user.id}\n          followed={props.user.followed}\n          addFriend={props.addFriend}\n          removeFriend={props.removeFriend}\n          toggleButtonIsFetching={props.toggleButtonIsFetching}\n          buttonIsFetching={props.buttonIsFetching}\n        />\n      </div>\n      <NavLink to={`/profile/${props.user.id}`}>\n        <div className={s.leftSide}>\n          <div className={s.leftOfLeftSide}>\n            <p className={s.name}>{props.user.name}</p>\n            <p className={s.about}>{props.user.status}</p>\n            <div className={s.rightOfLeftSide}></div>\n          </div>\n        </div>\n      </NavLink>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport Preloader from \"../../Layout/Navigation/Preloader/preloader\";\nimport Pagination from \"./pagination\";\nimport s from \"./search.module.css\";\nimport { UserCard } from \"./UserCard\";\n\nfunction Search(props) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let currentLocation = location.pathname.split(\"/\")[1];\n  const id = Number(useParams().id);\n\n  //Hook activates on component mount and location update\n  useEffect(() => {\n    if (isNaN(id)) {\n      props.toggleIsFetching(true);\n      navigate(`/${currentLocation}/1`);\n      //Check if already has users\n    } else if (props.users.length === 0 || props.currentPage !== id || location.pathname) {\n      props.getUsers(navigate, id, props.currentPage, props.count, props.onlyFriends);\n    }\n  }, [location]);\n  console.log(props.isNoneUsers, props.isFetching);\n\n  return (\n    <>\n      <section className={s.content}>\n        {props.isFetching || props.isNoneUsers === null ? (\n          <Preloader />\n        ) : (\n          <>\n            {props.isNoneUsers ? (\n              <>\n                <div> No friends :(</div>\n              </>\n            ) : (\n              <>\n                <div>\n                  {/* Return card for every user */}\n                  {props.users.map((user) => {\n                    return (\n                      <UserCard\n                        key={user.id}\n                        addFriend={props.addFriend}\n                        removeFriend={props.removeFriend}\n                        toggleButtonIsFetching={props.toggleButtonIsFetching}\n                        buttonIsFetching={props.buttonIsFetching}\n                        user={user}\n                      ></UserCard>\n                    );\n                  })}\n                </div>\n                <div className={s.paginationContainer}>\n                  <Pagination\n                    currentPage={props.currentPage}\n                    currentLocation={currentLocation}\n                    totalPages={Math.ceil(props.totalItems / props.count)}\n                  />\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </section>\n    </>\n  );\n}\nexport default Search;\n","import { connect } from \"react-redux\";\n\nimport {\n  setCurrentPageAT,\n  setTotalItemsAT,\n  setUsersAT,\n  toggleIsFetchingAT,\n  getUsersThunk,\n  removeFriendThunk,\n  addFriendThunk,\n} from \"../../../redux/searchReducer\";\nimport Search from \"./search\";\n\nlet mapStateToProps = (state, ownProps) => {\n  return {\n    users: state.searchPage.users,\n    count: state.searchPage.count,\n    totalItems: state.searchPage.totalItems,\n    currentPage: state.searchPage.currentPage,\n    isFetching: state.searchPage.isFetching,\n    buttonIsFetching: state.searchPage.buttonIsFetching,\n    isNoneUsers: state.searchPage.isNoneUsers,\n    onlyFriends: ownProps.onlyFriends,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    setUsers: (users) => {\n      dispatch(setUsersAT(users));\n    },\n    setTotalItems: (totalItems) => {\n      dispatch(setTotalItemsAT(totalItems));\n    },\n    setCurrentPage: (currentPage) => {\n      dispatch(setCurrentPageAT(currentPage));\n    },\n    toggleIsFetching: (bull) => {\n      dispatch(toggleIsFetchingAT(bull));\n    },\n    addFriend: (userId) => {\n      dispatch(addFriendThunk(userId));\n    },\n    removeFriend: (userId) => {\n      dispatch(removeFriendThunk(userId));\n    },\n    getUsers: (navigate, id, currentPage, count, onlyFriends) => {\n      dispatch(getUsersThunk(navigate, id, currentPage, count, onlyFriends));\n    },\n  };\n};\n\nconst SearchContainer = connect(mapStateToProps, mapDispatchToProps)(Search);\n\nexport default SearchContainer;\n","import React from \"react\";\n\nexport default function ProfileError(props) {\n  return <h1>Unknown error</h1>;\n}\n","import React from \"react\";\nimport s from \"../messages.module.css\";\n\nexport function MapMessage(props) {\n  let messagesArr = React.Children.toArray(\n    props.messagesData.map((message) => {\n      let fromwho;\n      if (message.from === \"me\") {\n        fromwho = s.me;\n      } else fromwho = s.him;\n      return <p className={fromwho}> {message.message}</p>;\n    })\n  );\n\n  return <>{messagesArr}</>;\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MapMessage } from \"./MapMessages/mapMessages\";\nimport s from \"./messages.module.css\";\n\nfunction Messages(props) {\n  const { id } = useParams();\n\n  let onTextChange = (e) => {\n    let message = e.target.value;\n    props.onTextChange(message, id);\n  };\n\n  let addMessage = () => {\n    props.addMessage(id);\n  };\n\n  return (\n    <div className={s.messages}>\n      {<MapMessage messagesData={props.getCurrentMessagesData(id).dialog} />}\n      <textarea placeholder=\"Enter your message...\" value={props.getCurrentMessagesData(id).newMessageText} onChange={onTextChange}></textarea>\n      <button onClick={addMessage}>Send message</button>\n    </div>\n  );\n}\n\nexport default Messages;\n","import { connect } from \"react-redux\";\nimport { addMessageAT, updateMessageAT } from \"../../../../redux/dialogsReducer\";\nimport Messages from \"./messages\";\n\nlet mapStateToProps = (state) => {\n  return {\n    getCurrentMessagesData: (id) => {\n      return state.dialogsPage.messagesData[id];\n    },\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    onTextChange: (message, id) => {\n      dispatch(updateMessageAT(message, id));\n    },\n    addMessage: (id) => {\n      dispatch(addMessageAT(id));\n    },\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\n\nexport default MessagesContainer;\n","import React from \"react\";\nimport s from \"./../dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction DialogLinks(props) {\n  let dialogLinks = React.Children.toArray(props.dialogData.map((names) => <NavLink to={\"/dialog/\" + names.id}>{names.name}</NavLink>));\n  return (\n    <>\n      <div className={s.dialogs}>{dialogLinks}</div>\n    </>\n  );\n}\n\nexport default DialogLinks;\n","import React from \"react\";\nimport DialogLinks from \"./DialogLink/dialogLink\";\nimport \"./dialogPage.css\";\nimport { Outlet } from \"react-router-dom\";\n\nfunction Dialogs(props) {\n  return (\n    <div className=\"dialog_page\">\n      <DialogLinks dialogData={props.dialogData} />\n      <Outlet />\n    </div>\n  );\n}\n\nexport default Dialogs;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport withLoginCheckRedirect from \"../../HOC/withLoginCheckRedirect\";\nimport Dialogs from \"./dialogsList\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogData: state.dialogsPage.dialogData,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withLoginCheckRedirect)(Dialogs);\n","import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport HeaderContainer from \"../Layout/Navigation/Header/headerContainer\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginForm = (props) => (\n  <Formik\n    initialValues={{ email: \"\", password: \"\", rememberMe: false }}\n    validationSchema={Yup.object({\n      email: Yup.string()\n        .required(\"No email provided.\")\n        .matches(/[a-zA-Z]/, \"Login can only contain Latin letters.\")\n        .email(\"Invalid email\"),\n      password: Yup.string()\n        .required(\"No password provided.\")\n        .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\"),\n    })}\n    onSubmit={(values, { setSubmitting }) => {\n      props.clearLoginError();\n      setSubmitting(false);\n      props.login(values);\n    }}\n  >\n    {({ isSubmitting }) => (\n      <Form>\n        <p>{props.loginError ? props.loginError : \"\"}</p>\n        <div>\n          <Field placeholder=\"Email\" type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </div>\n        <div>\n          <Field placeholder=\"Password\" type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </div>\n        <div>\n          <Field id=\"rememberMe\" type=\"checkbox\" name=\"rememberMe\" />\n          <label htmlFor=\"rememberMe\">Remember me</label>\n        </div>\n        <button type=\"submit\" disabled={isSubmitting}>\n          Submit\n        </button>\n      </Form>\n    )}\n  </Formik>\n);\n\nexport default function Login(props) {\n  let navigate = useNavigate();\n  setTimeout(() => {\n    if (props.isAuth) {\n      navigate(\"/\");\n    }\n  }, 60);\n  return (\n    <>\n      <HeaderContainer />\n      <section>\n        <h1>Login Form</h1>\n        <div>\n          <LoginForm login={props.login} isAuth={props.isAuth} loginError={props.loginError} clearLoginError={props.clearLoginError} />\n        </div>\n      </section>\n    </>\n  );\n}\n","import { connect } from \"react-redux\";\nimport { loginThunk, setLoginErrorActionType } from \"../../redux/authReducer\";\nimport Login from \"./login\";\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  loginError: state.auth.loginError,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (obj) => {\n      dispatch(loginThunk(obj.email, obj.password, obj.rememberMe));\n    },\n    clearLoginError: () => {\n      dispatch(setLoginErrorActionType(null));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport Preloader from \"../../Layout/Navigation/Preloader/preloader\";\nimport { useState } from \"react\";\nimport { memo } from \"react\";\n\nconst SettingsForm = (props) => {\n  let getContactsValidation = () => {\n    let validationObject = {};\n    Object.keys(props.profile.contacts).forEach((key) => {\n      validationObject[key] = Yup.string().matches(\n        /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n        \"Enter correct url!\"\n      );\n    });\n    return validationObject;\n  };\n\n  let mapLinks = React.Children.toArray(\n    Object.keys(props.profile.contacts).map((key) => {\n      return (\n        <>\n          <label htmlFor={`${key}`}>{key.charAt(0).toUpperCase() + key.slice(1)}: </label>\n          <Field placeholder={`Enter ${key} link...`} type=\"text\" name={`contacts.${key}`} />\n          <br />\n          <ErrorMessage name={`contacts.${key}`} component=\"p\" />\n        </>\n      );\n    })\n  );\n\n  return (\n    <Formik\n      initialValues={{\n        aboutMe: props.profile.aboutMe,\n        fullName: props.profile.fullName,\n        lookingForAJob: props.profile.lookingForAJob,\n        lookingForAJobDescription: props.profile.lookingForAJobDescription,\n        contacts: props.profile.contacts,\n      }}\n      validationSchema={Yup.object({\n        contacts: Yup.object(getContactsValidation()),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(values);\n        props.setNewProfileDataThunk(values);\n        setSubmitting(false);\n      }}\n      enableReinitialize\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <div>\n            <h3>Name</h3>\n            <Field placeholder=\"Enter new name...\" type=\"text\" name=\"fullName\" />\n            <ErrorMessage name=\"fullName\" component=\"div\" />\n          </div>\n          <div>\n            <h3>About you</h3>\n            <Field as=\"textarea\" placeholder=\"Type something about you...\" type=\"text\" name=\"aboutMe\" />\n            <ErrorMessage name=\"aboutMe\" component=\"div\" />\n          </div>\n          <div>\n            <Field id=\"lookingForAJob\" type=\"checkbox\" name=\"lookingForAJob\" />\n            <label htmlFor=\"lookingForAJob\">Are you looking for a job?</label>\n          </div>\n          <div>\n            <Field as=\"textarea\" placeholder=\"Type something about your job...\" type=\"text\" name=\"lookingForAJobDescription\" />\n            <ErrorMessage name=\"lookingForAJobDescription\" component=\"div\" />\n          </div>\n          <div>\n            <h3>Links</h3>\n            {mapLinks}\n          </div>\n          <button type=\"submit\" disabled={isSubmitting}>\n            Save changes\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst AvatarChange = (props) => {\n  let [file, updateFile] = useState({});\n\n  let fileChangeHandler = (e) => {\n    updateFile(e.target.files[0]);\n  };\n\n  let fileUploadHandler = () => {\n    let fileForm = new FormData();\n    fileForm.append(\"image\", file, file.name);\n    props.setAvatar(fileForm, props.id);\n  };\n\n  return (\n    <div>\n      <img src={props.avatar} alt=\"avatar\" width=\"300px\" height=\"300px\" />\n      <br />\n      <input type=\"file\" onChange={fileChangeHandler} />\n      <br />\n      <button onClick={fileUploadHandler}>Change avatar</button>\n    </div>\n  );\n};\n\nlet Settings = memo((props) => {\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <>\n          <AvatarChange avatar={props.profile.avatar.large} setAvatar={props.setAvatarThunk} id={props.loggedProfileId} />\n          <SettingsForm\n            setNewProfileDataThunk={props.setNewProfileDataThunk}\n            getProfile={props.getMyProfileThunk}\n            profile={props.profile}\n            loggedProfileId={props.loggedProfileId}\n          />\n        </>\n      )}\n    </>\n  );\n});\nexport default Settings;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { getMyProfileThunk, setNewProfileDataThunk, setAvatarThunk } from \"../../../redux/authReducer\";\nimport withLoginCheckRedirect from \"../../HOC/withLoginCheckRedirect\";\nimport Settings from \"./settings\";\n\nconst mapStateToProps = (state) => ({\n  profile: state.auth.myProfile,\n  loggedProfileId: state.auth.id,\n  isFetching: state.auth.isFetching,\n});\n\nexport default compose(connect(mapStateToProps, { getMyProfileThunk, setNewProfileDataThunk, setAvatarThunk }), withLoginCheckRedirect)(Settings);\n","import \"./App.css\";\nimport React, { memo, useEffect } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Layout } from \"./components/Layout/layout.jsx\";\nimport ProfileConteiner from \"./components/Content/Profile/profileContainer\";\nimport SearchContainer from \"./components/Content/Search/searchContainer\";\nimport ProfileError from \"./components/Content/Profile/profileError\";\nimport MessagesContainer from \"./components/Content/Dialogs/Messages/messagesContainer\";\nimport DialogsContainer from \"./components/Content/Dialogs/dialogListContainer\";\nimport LoginContainer from \"./components/Login/loginContainer\";\nimport { connect } from \"react-redux\";\nimport { getLoggedInThunk } from \"./redux/authReducer\";\nimport { getMyProfileThunk } from \"./redux/authReducer\";\nimport { setSetHasFetchedProfile } from \"./redux/authReducer\";\nimport SettingsContainer from \"./components/Content/Settings/settingsContainer\";\nimport Preloader from \"./components/Layout/Navigation/Preloader/preloader\";\n\nconst App = memo((props) => {\n  useEffect(() => {\n    props.getLoggedInThunk();\n    if (props.isAuth === false) {\n      props.setSetHasFetchedProfile(true);\n    } else if (props.id !== null) {\n      props.getMyProfileThunk();\n    }\n  }, [props.isAuth]);\n\n  return (\n    <>\n      {props.isLoaded ? (\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <>\n              <Route path=\"/profile\">\n                <Route path=\"/profile\" element={<ProfileConteiner />} />\n                <Route path=\":id\" element={<ProfileConteiner />} />\n                <Route path=\"error\" element={<ProfileError />} />\n              </Route>\n              <Route path=\"/dialog\" element={<DialogsContainer />}>\n                <Route path=\":id\" element={<MessagesContainer />} />\n                <Route path=\"/dialog\" element={<div>Please choose a dialog</div>} />\n              </Route>\n              <Route path=\"/search/\" element={<SearchContainer onlyFriends={false} />}>\n                <Route path=\":id\" element={<SearchContainer />} />\n              </Route>\n              <Route path=\"/friends/\" element={<SearchContainer onlyFriends={true} />}>\n                <Route path=\":id\" element={<SearchContainer />} />\n              </Route>\n              <Route path=\"/settings\" element={<SettingsContainer />} />\n              <Route path=\"*\" element={\"\"} />\n            </>\n          </Route>\n          <Route path=\"/login\" element={<LoginContainer />} />\n        </Routes>\n      ) : (\n        <>\n          <Preloader />\n        </>\n      )}\n    </>\n  );\n});\n\nexport default connect(\n  (state) => {\n    return {\n      id: state.auth.id,\n      isAuth: state.auth.isAuth,\n      isLoaded: state.auth.hasFetched,\n    };\n  },\n  {\n    getLoggedInThunk,\n    getMyProfileThunk,\n    setSetHasFetchedProfile,\n  }\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nexport function renderEverything() {\n  root.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <HashRouter>\n          <App store={store} state={store.getState()} dispatch={store.dispatch.bind(store)} />\n        </HashRouter>\n      </Provider>\n    </React.StrictMode>\n  );\n}\n\nrenderEverything();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messages_messages__uqc1i\",\"me\":\"messages_me__2jyzr\",\"him\":\"messages_him__2YuZa\"};","module.exports = __webpack_public_path__ + \"static/media/Search.c16ab624.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"preloader_preloaderContainer__2Sd5v\",\"preloader\":\"preloader_preloader__8IbZN\",\"preloader1\":\"preloader_preloader1__2gwa4\",\"preloader2\":\"preloader_preloader2__g5zX_\",\"preloader3\":\"preloader_preloader3__26Pbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"search_content__3-iyf\",\"userCard\":\"search_userCard__3MClR\",\"rightSide\":\"search_rightSide__fu5es\",\"leftSide\":\"search_leftSide__3ECIq\",\"name\":\"search_name__lqYkw\",\"paginationContainer\":\"search_paginationContainer__30Slk\",\"pagination\":\"search_pagination__YvKxQ\",\"active\":\"search_active__2MwIe\",\"friendButton\":\"search_friendButton__2Oygv\",\"friendButtonFetching\":\"search_friendButtonFetching____Vt3\"};","module.exports = __webpack_public_path__ + \"static/media/Dialog.ee7d7cae.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bell.8cb64d96.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.b739b27c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Profile.1dab545b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Feed.52e80b6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Message.27e86842.svg\";","module.exports = __webpack_public_path__ + \"static/media/Friends.70e92cc5.svg\";"],"sourceRoot":""}